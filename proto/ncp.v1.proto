syntax = "proto3";
package ncp.v1;

import "google/protobuf/timestamp.proto";

enum ErrorCode {
  ERROR_UNKNOWN = 0;
  ERR_PROTOCOL = 1;
  ERR_NO_SPACE = 2;
  ERR_PERMISSION = 3;
  ERR_CHECKSUM = 4;
  ERR_TIMEOUT = 5;
  ERR_AUTH = 6;
  ERR_INVALID_ARG = 7;
  ERR_RESUME_NOT_SUPPORTED = 8;
  ERR_UNEXPECTED_EOF = 9;
}

message Probe {
  string session_id = 1;
  string version = 2;
  repeated string capabilities = 3;
  uint32 keepalive_seconds = 4;
  string client_name = 5;
}

message Established {
  string session_id = 1;
  string version = 2;
  repeated string capabilities = 3;
  google.protobuf.Timestamp server_time = 4;
}

message FileMeta {
  string name = 1;
  uint64 size = 2;
  bool is_dir = 3;
  uint32 mode = 4; // as POSIX octal, e.g. 0o644 => 420
  google.protobuf.Timestamp mtime = 5;
  string checksum_alg = 6; // "sha256", "xxhash64", etc.
  bytes checksum = 7; // raw bytes (not hex)
  map<string,string> attrs = 8;
}

message Meta {
  string session_id = 1;
  FileMeta file = 2;
}

message PreflightOk {
  string session_id = 1;
  bool destination_exists = 2;
  uint64 available_space = 3;
  string temp_path = 4;
}

message PreflightFail {
  string session_id = 1;
  ErrorCode code = 2;
  string reason = 3;
}

enum TransferMode {
  TRANSFER_RAW = 0;
  TRANSFER_CHUNKED = 1;
}

message TransferStart {
  string session_id = 1;
  TransferMode mode = 2;
  uint64 file_size = 3;
  uint32 chunk_size = 4; // for chunked mode
}

message TransferResult {
  string session_id = 1;
  bool ok = 2;
  ErrorCode code = 3;
  string reason = 4;
  bytes checksum = 5;
  uint64 received_bytes = 6;
}

message Heartbeat {
  string session_id = 1;
  uint64 seq = 2;
}

message Error {
  string session_id = 1;
  ErrorCode code = 2;
  string message = 3;
}

message OffsetReport {
  string session_id = 1;
  uint64 received_bytes = 2; // used for resume negotiation
  repeated bytes chunk_checksums = 3; // optional per-chunk checksums
}

message ResumeRequest {
  string session_id = 1;
  uint64 offset = 2;
}

message Capability {
  string name = 1; // e.g., "checksum:sha256", "resume", "tls", "compress:gzip"
}
